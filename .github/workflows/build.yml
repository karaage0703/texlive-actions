name: Build TeX Document

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DEFAULT_TEX_FILE: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set TeX file name
      run: |
        if [ -n "${{ secrets.TARGET_FILE }}" ]; then
          echo "TEX_FILE=${{ secrets.TARGET_FILE }}" >> $GITHUB_ENV
        else
          echo "TEX_FILE=$DEFAULT_TEX_FILE" >> $GITHUB_ENV
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Pull Docker image
      run: docker pull ghcr.io/${{ github.repository_owner }}/texlive:latest

    - name: Build TeX document with BibTeX
      run: |
        echo "Building TeX file: ${{ env.TEX_FILE }}.tex"
        docker run --rm -v ${{ github.workspace }}:/workdir ghcr.io/${{ github.repository_owner }}/texlive:latest sh -c "
          uplatex -interaction=nonstopmode -file-line-error -halt-on-error -synctex=1 ${{ env.TEX_FILE }}.tex &&
          upbibtex ${{ env.TEX_FILE }}.aux &&
          uplatex -interaction=nonstopmode -file-line-error -halt-on-error -synctex=1 ${{ env.TEX_FILE }}.tex &&
          uplatex -interaction=nonstopmode -file-line-error -halt-on-error -synctex=1 ${{ env.TEX_FILE }}.tex &&
          dvipdfmx ${{ env.TEX_FILE }}.dvi
        "

    - name: Upload PDF artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.TEX_FILE }}
        path: ${{ env.TEX_FILE }}.pdf

    - name: Notify Slack and Discord
      if: always()
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          STATUS="成功"
          COLOR="#36a64f"
        else
          STATUS="失敗"
          COLOR="#ff0000"
        fi

        MESSAGE="*TeXドキュメント「${{ env.TEX_FILE }}.tex」のビルドが${STATUS}しました*\n\n*リポジトリ:* ${{ github.repository }}\n*ブランチ:* ${{ github.ref_name }}\n*コミット:* ${{ github.sha }}\n*実行者:* ${{ github.actor }}\n*ワークフロー:* ${{ env.WORKFLOW_URL }}"

        if [ -n "$SLACK_WEBHOOK" ]; then
          curl -X POST $SLACK_WEBHOOK \
          -H 'Content-type: application/json' \
          --data '{
            "attachments": [
              {
                "color": "'"$COLOR"'",
                "text": "'"$MESSAGE"'"
              }
            ]
          }'
        fi

        if [ -n "$DISCORD_WEBHOOK" ]; then
          curl -X POST $DISCORD_WEBHOOK \
          -H 'Content-type: application/json' \
          --data '{
            "embeds": [
              {
                "color": '"$(printf "%d" 0x${COLOR:1})"',
                "description": "'"$MESSAGE"'"
              }
            ]
          }'
        fi