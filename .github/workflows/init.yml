name: Initialize TeX Live Environment

on:
  workflow_dispatch:

jobs:
  initial-setup:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      id: login-ghcr
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}
      continue-on-error: true

    - name: Notify Slack about CR_PAT failure
      if: steps.login-ghcr.outcome == 'failure'
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      run: |
        if [ -n "$SLACK_WEBHOOK" ]; then
          MESSAGE="*GitHub Container Registry認証に失敗しました*\n\nCR_PATが有効期限切れしている可能性があります。こちらで新しいPATを設定してください。 https://github.com/settings/tokens\n\n*リポジトリ:* ${{ github.repository }}"
          SLACK_RESPONSE=$(curl -w "\n%{http_code}" -X POST $SLACK_WEBHOOK \
          -H 'Content-type: application/json' \
          --data '{
            "attachments": [
              {
                "color": "#FF0000",
                "text": "'"$MESSAGE"'"
              }
            ]
          }')

          SLACK_HTTP_STATUS=$(echo "$SLACK_RESPONSE" | tail -n1)
          SLACK_RESPONSE_BODY=$(echo "$SLACK_RESPONSE" | sed '$d')

          if [ "$SLACK_HTTP_STATUS" != "200" ]; then
            echo "Failed to send Slack notification. HTTP status: $SLACK_HTTP_STATUS"
            echo "Response body: $SLACK_RESPONSE_BODY"
          else
            echo "Slack notification sent successfully."
          fi
        else
          echo "SLACK_WEBHOOK is not set. Skipping Slack notification."
        fi
      continue-on-error: true

    - name: Notify Discord about CR_PAT failure
      if: steps.login-ghcr.outcome == 'failure'
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        if [ -n "$DISCORD_WEBHOOK" ]; then
          MESSAGE="**GitHub Container Registry認証に失敗しました**\n\nCR_PATが有効期限切れしている可能性があります。こちらで新しいPATを設定してください。 https://github.com/settings/tokens\n\n**リポジトリ:** ${{ github.repository }}"
          DISCORD_RESPONSE=$(curl -w "\n%{http_code}" -X POST $DISCORD_WEBHOOK \
          -H 'Content-type: application/json' \
          --data '{
            "content": "'"$MESSAGE"'"
          }')

          DISCORD_HTTP_STATUS=$(echo "$DISCORD_RESPONSE" | tail -n1)
          DISCORD_RESPONSE_BODY=$(echo "$DISCORD_RESPONSE" | sed '$d')

          if [ "$DISCORD_HTTP_STATUS" != "204" ]; then
            echo "Failed to send Discord notification. HTTP status: $DISCORD_HTTP_STATUS"
            echo "Response body: $DISCORD_RESPONSE_BODY"
          else
            echo "Discord notification sent successfully."
          fi
        else
          echo "DISCORD_WEBHOOK is not set. Skipping Discord notification."
        fi
      continue-on-error: true

    - name: Exit if login failed
      if: steps.login-ghcr.outcome == 'failure'
      run: exit 1

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/texlive:latest
        cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/texlive:buildcache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/texlive:buildcache,mode=max

    - name: Notify about successful initialization
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        MESSAGE="TeX Live環境の初期化が完了しました。\n\n*リポジトリ:* ${{ github.repository }}"
        
        if [ -n "$SLACK_WEBHOOK" ]; then
          curl -X POST $SLACK_WEBHOOK \
          -H 'Content-type: application/json' \
          --data '{
            "text": "'"$MESSAGE"'"
          }'
        fi
        
        if [ -n "$DISCORD_WEBHOOK" ]; then
          curl -X POST $DISCORD_WEBHOOK \
          -H 'Content-type: application/json' \
          --data '{
            "content": "'"$MESSAGE"'"
          }'
        fi